name: Tests

on:
  pull_request:
  push:
    branches: [main]
  workflow_call:

permissions:
  contents: read

jobs:
  acceptance:
    environment: Test
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: "1.21"
          cache: true
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.9.*"
          terraform_wrapper: false
      - name: Run acceptance tests
        run: make testacc
        env:
          OPAL_TEST_TOKEN: ${{ secrets.OPAL_TEST_TOKEN }}
          OPAL_TEST_KNOWN_USER_ID_1: ${{ secrets.OPAL_TEST_KNOWN_USER_ID_1 }}
          OPAL_TEST_KNOWN_USER_ID_2: ${{ secrets.OPAL_TEST_KNOWN_USER_ID_2 }}
          OPAL_TEST_BASE_URL: ${{ secrets.OPAL_TEST_BASE_URL }}
          OPAL_TEST_KNOWN_CUSTOM_APP_ID: ${{ secrets.OPAL_TEST_KNOWN_CUSTOM_APP_ID }}
          OPAL_TEST_KNOWN_CUSTOM_APP_ADMIN_OWNER_ID: ${{ secrets.OPAL_TEST_KNOWN_CUSTOM_APP_ADMIN_OWNER_ID }}
          OPAL_TEST_KNOWN_REQUEST_TEMPLATE_ID: ${{ secrets.OPAL_TEST_KNOWN_REQUEST_TEMPLATE_ID }}
          OPAL_TEST_KNOWN_GITHUB_APP_ID: ${{ secrets.OPAL_TEST_KNOWN_GITHUB_APP_ID }}
          OPAL_TEST_KNOWN_GITHUB_APP_REPO_NAME: ${{ secrets.OPAL_TEST_KNOWN_GITHUB_APP_REPO_NAME }}
          OPAL_TEST_KNOWN_GITHUB_APP_TEAM_SLUG: ${{ secrets.OPAL_TEST_KNOWN_GITHUB_APP_TEAM_SLUG }}
          OPAL_TEST_KNOWN_OPAL_APP_ID: ${{ secrets.OPAL_TEST_KNOWN_OPAL_APP_ID }}
          OPAL_TEST_KNOWN_OPAL_APP_ADMIN_OWNER_ID: ${{ secrets.OPAL_TEST_KNOWN_OPAL_APP_ADMIN_OWNER_ID }}
          OPAL_TEST_KNOWN_GITHUB_TEST_REPO_2_RESOURCE_ID: ${{ secrets.OPAL_TEST_KNOWN_GITHUB_TEST_REPO_2_RESOURCE_ID }}
          OPAL_TEST_KNOWN_OPAL_GROUP_ID: ${{ secrets.OPAL_TEST_KNOWN_OPAL_GROUP_ID }}
          OPAL_TEST_KNOWN_ON_CALL_SCHEDULE_ID: ${{ secrets.OPAL_TEST_KNOWN_ON_CALL_SCHEDULE_ID }}
      # - name: Clean up test organization
      #   run: make sweep
      #   env:
      #     OPAL_TEST_TOKEN: ${{ secrets.OPAL_TEST_TOKEN }}
      #     OPAL_TEST_KNOWN_USER_ID_1: ${{ secrets.OPAL_TEST_KNOWN_USER_ID_1 }}
      #     OPAL_TEST_KNOWN_USER_ID_2: ${{ secrets.OPAL_TEST_KNOWN_USER_ID_2 }}
      #     OPAL_TEST_BASE_URL: ${{ secrets.OPAL_TEST_BASE_URL }}
      #     OPAL_TEST_KNOWN_CUSTOM_APP_ID: ${{ secrets.OPAL_TEST_KNOWN_CUSTOM_APP_ID }}
      #     OPAL_TEST_KNOWN_CUSTOM_APP_ADMIN_OWNER_ID: ${{ secrets.OPAL_TEST_KNOWN_CUSTOM_APP_ADMIN_OWNER_ID }}
      #     OPAL_TEST_KNOWN_REQUEST_TEMPLATE_ID: ${{ secrets.OPAL_TEST_KNOWN_REQUEST_TEMPLATE_ID }}
      #     OPAL_TEST_KNOWN_GITHUB_APP_ID: ${{ secrets.OPAL_TEST_KNOWN_GITHUB_APP_ID }}
      #     OPAL_TEST_KNOWN_GITHUB_APP_REPO_NAME: ${{ secrets.OPAL_TEST_KNOWN_GITHUB_APP_REPO_NAME }}
      #     OPAL_TEST_KNOWN_GITHUB_APP_TEAM_SLUG: ${{ secrets.OPAL_TEST_KNOWN_GITHUB_APP_TEAM_SLUG }}
      #     OPAL_TEST_KNOWN_OPAL_APP_ID: ${{ secrets.OPAL_TEST_KNOWN_OPAL_APP_ID }}
      #     OPAL_TEST_KNOWN_OPAL_APP_ADMIN_OWNER_ID: ${{ secrets.OPAL_TEST_KNOWN_OPAL_APP_ADMIN_OWNER_ID }}
      #     OPAL_TEST_KNOWN_GITHUB_TEST_REPO_2_RESOURCE_ID: ${{ secrets.OPAL_TEST_KNOWN_GITHUB_TEST_REPO_2_RESOURCE_ID }}
      #     OPAL_TEST_KNOWN_OPAL_GROUP_ID: ${{ secrets.OPAL_TEST_KNOWN_OPAL_GROUP_ID }}
      #     OPAL_TEST_KNOWN_ON_CALL_SCHEDULE_ID: ${{ secrets.OPAL_TEST_KNOWN_ON_CALL_SCHEDULE_ID }}
      - name: Check for doc changes
        id: changes
        run: |
          make docs
          if [ -n "$(git status --porcelain)" ]; then
            echo "The following files need to be regenerated:"
            git status
            git status --porcelain | grep '^??' | sed 's/\?//g'
            git diff
            exit 1
          fi

          exit 0;
