name: Tests

on:
  pull_request:
  push:
    branches: [main]
  workflow_call:

permissions:
  contents: read

jobs:
  acceptance:
    environment: Test
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: "1.21"
          cache: true
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.9.*"
          terraform_wrapper: false
      - name: Run acceptance tests
        run: make testacc
        env:
          OPAL_TEST_TOKEN: ${{ secrets.OPAL_TEST_TOKEN }}
          OPAL_TEST_KNOWN_USER_ID_1: 791fd66f-d1ce-48eb-b51c-e3341e6d18b4
          OPAL_TEST_KNOWN_USER_ID_2: e7ec7278-491e-4088-b3be-c5ef321a46ea
          OPAL_TEST_BASE_URL: ${{ secrets.OPAL_TEST_BASE_URL }}
          OPAL_TEST_KNOWN_CUSTOM_APP_ID: 42401e72-65af-436a-a8b3-e6681ccb573d
          OPAL_TEST_KNOWN_CUSTOM_APP_ADMIN_OWNER_ID: 89f311d4-632a-4000-8299-f9dd9d0b3904
          OPAL_TEST_KNOWN_REQUEST_TEMPLATE_ID: 8b98f5b6-c63b-427a-b071-22e2f33a94eb
          OPAL_TEST_KNOWN_GITHUB_APP_ID: 25f99ad5-66f6-4d26-a16c-86d9069ae07a
          OPAL_TEST_KNOWN_GITHUB_APP_REPO_NAME: ${{ secrets.OPAL_TEST_KNOWN_GITHUB_APP_REPO_NAME }}
          OPAL_TEST_KNOWN_GITHUB_APP_TEAM_SLUG: ${{ secrets.OPAL_TEST_KNOWN_GITHUB_APP_TEAM_SLUG }}
          OPAL_TEST_KNOWN_OPAL_APP_ID: e6a0740e-15aa-48e4-b7fa-3bb264f67621
          OPAL_TEST_KNOWN_OPAL_APP_ADMIN_OWNER_ID: 533bc063-d371-47e4-a557-3df9da17fcfa
          OPAL_TEST_KNOWN_GITHUB_TEST_REPO_2_RESOURCE_ID: b0a9d89c-1570-421c-a63c-48d373bd8788
          OPAL_TEST_KNOWN_OPAL_GROUP_ID: 38bfd8cf-006d-44e5-9bbc-5caf63450c63
          OPAL_TEST_KNOWN_ON_CALL_SCHEDULE_ID: c49f7eed-4564-498c-92b5-33ea71ea94e1
      # - name: Clean up test organization
      #   run: make sweep
      #   env:
      #     OPAL_TEST_TOKEN: ${{ secrets.OPAL_TEST_TOKEN }}
      #     OPAL_TEST_KNOWN_USER_ID_1: ${{ secrets.OPAL_TEST_KNOWN_USER_ID_1 }}
      #     OPAL_TEST_KNOWN_USER_ID_2: ${{ secrets.OPAL_TEST_KNOWN_USER_ID_2 }}
      #     OPAL_TEST_BASE_URL: ${{ secrets.OPAL_TEST_BASE_URL }}
      #     OPAL_TEST_KNOWN_CUSTOM_APP_ID: ${{ secrets.OPAL_TEST_KNOWN_CUSTOM_APP_ID }}
      #     OPAL_TEST_KNOWN_CUSTOM_APP_ADMIN_OWNER_ID: ${{ secrets.OPAL_TEST_KNOWN_CUSTOM_APP_ADMIN_OWNER_ID }}
      #     OPAL_TEST_KNOWN_REQUEST_TEMPLATE_ID: ${{ secrets.OPAL_TEST_KNOWN_REQUEST_TEMPLATE_ID }}
      #     OPAL_TEST_KNOWN_GITHUB_APP_ID: ${{ secrets.OPAL_TEST_KNOWN_GITHUB_APP_ID }}
      #     OPAL_TEST_KNOWN_GITHUB_APP_REPO_NAME: ${{ secrets.OPAL_TEST_KNOWN_GITHUB_APP_REPO_NAME }}
      #     OPAL_TEST_KNOWN_GITHUB_APP_TEAM_SLUG: ${{ secrets.OPAL_TEST_KNOWN_GITHUB_APP_TEAM_SLUG }}
      #     OPAL_TEST_KNOWN_OPAL_APP_ID: ${{ secrets.OPAL_TEST_KNOWN_OPAL_APP_ID }}
      #     OPAL_TEST_KNOWN_OPAL_APP_ADMIN_OWNER_ID: ${{ secrets.OPAL_TEST_KNOWN_OPAL_APP_ADMIN_OWNER_ID }}
      #     OPAL_TEST_KNOWN_GITHUB_TEST_REPO_2_RESOURCE_ID: ${{ secrets.OPAL_TEST_KNOWN_GITHUB_TEST_REPO_2_RESOURCE_ID }}
      #     OPAL_TEST_KNOWN_OPAL_GROUP_ID: ${{ secrets.OPAL_TEST_KNOWN_OPAL_GROUP_ID }}
      #     OPAL_TEST_KNOWN_ON_CALL_SCHEDULE_ID: ${{ secrets.OPAL_TEST_KNOWN_ON_CALL_SCHEDULE_ID }}
      - name: Check for doc changes
        id: changes
        run: |
          make docs
          if [ -n "$(git status --porcelain)" ]; then
            echo "The following files need to be regenerated:"
            git status
            git status --porcelain | grep '^??' | sed 's/\?//g'
            git diff
            exit 1
          fi

          exit 0;
