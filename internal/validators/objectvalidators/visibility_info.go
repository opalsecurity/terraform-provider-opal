// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package objectvalidators

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/opalsecurity/terraform-provider-opal/v3/internal/provider/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"
)

var _ validator.Object = ObjectVisibilityInfoValidator{}

type ObjectVisibilityInfoValidator struct{}

// Description describes the validation in plain text formatting.
func (v ObjectVisibilityInfoValidator) Description(_ context.Context) string {
	return "visibility must be either GLOBAL or LIMITED and visibility_group_ids must be specified when visibility is LIMITED"
}

// MarkdownDescription describes the validation in Markdown formatting.
func (v ObjectVisibilityInfoValidator) MarkdownDescription(ctx context.Context) string {
	return v.Description(ctx)
}

// Validate performs the validation.
func (v ObjectVisibilityInfoValidator) ValidateObject(ctx context.Context, req validator.ObjectRequest, resp *validator.ObjectResponse) {
	visibilityInfo := types.VisibilityInfo{}
	req.ConfigValue.As(ctx, &visibilityInfo, basetypes.ObjectAsOptions{
		UnhandledNullAsEmpty:    true,
		UnhandledUnknownAsEmpty: true,
	})
	if visibilityInfo.Visibility.String() == "GLOBAL" && visibilityInfo.VisibilityGroupIds != nil && len(visibilityInfo.VisibilityGroupIds) != 0 {
		resp.Diagnostics.AddAttributeError(
			req.Path,
			"cannot specify visibility_group_ids when visibility is GLOBAL",
			req.Path.String()+": "+v.Description(ctx),
		)
	}
}

func VisibilityInfo() validator.Object {
	return ObjectVisibilityInfoValidator{}
}
