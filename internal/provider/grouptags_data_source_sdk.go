// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"github.com/hashicorp/terraform-plugin-framework/types"
	tfTypes "github.com/opalsecurity/terraform-provider-opal/internal/provider/types"
	"github.com/opalsecurity/terraform-provider-opal/internal/sdk/models/shared"
	"time"
)

func (r *GroupTagsDataSourceModel) RefreshFromSharedTagsList(resp *shared.TagsList) {
	if resp != nil {
		r.Tags = []tfTypes.Tag{}
		if len(r.Tags) > len(resp.Tags) {
			r.Tags = r.Tags[:len(resp.Tags)]
		}
		for tagsCount, tagsItem := range resp.Tags {
			var tags1 tfTypes.Tag
			if tagsItem.CreatedAt != nil {
				tags1.CreatedAt = types.StringValue(tagsItem.CreatedAt.Format(time.RFC3339Nano))
			} else {
				tags1.CreatedAt = types.StringNull()
			}
			tags1.ID = types.StringValue(tagsItem.ID)
			tags1.Key = types.StringPointerValue(tagsItem.Key)
			if tagsItem.UpdatedAt != nil {
				tags1.UpdatedAt = types.StringValue(tagsItem.UpdatedAt.Format(time.RFC3339Nano))
			} else {
				tags1.UpdatedAt = types.StringNull()
			}
			tags1.UserCreatorID = types.StringPointerValue(tagsItem.UserCreatorID)
			tags1.Value = types.StringPointerValue(tagsItem.Value)
			if tagsCount+1 > len(r.Tags) {
				r.Tags = append(r.Tags, tags1)
			} else {
				r.Tags[tagsCount].CreatedAt = tags1.CreatedAt
				r.Tags[tagsCount].ID = tags1.ID
				r.Tags[tagsCount].Key = tags1.Key
				r.Tags[tagsCount].UpdatedAt = tags1.UpdatedAt
				r.Tags[tagsCount].UserCreatorID = tags1.UserCreatorID
				r.Tags[tagsCount].Value = tags1.Value
			}
		}
	}
}
