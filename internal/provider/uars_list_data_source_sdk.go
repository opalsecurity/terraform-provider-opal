// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"github.com/hashicorp/terraform-plugin-framework/types"
	tfTypes "github.com/opalsecurity/terraform-provider-opal/internal/provider/types"
	"github.com/opalsecurity/terraform-provider-opal/internal/sdk/models/shared"
	"time"
)

func (r *UARSListDataSourceModel) RefreshFromSharedPaginatedUARsList(resp *shared.PaginatedUARsList) {
	if resp != nil {
		r.Next = types.StringPointerValue(resp.Next)
		r.Previous = types.StringPointerValue(resp.Previous)
		r.Results = []tfTypes.Uar{}
		if len(r.Results) > len(resp.Results) {
			r.Results = r.Results[:len(resp.Results)]
		}
		for resultsCount, resultsItem := range resp.Results {
			var results1 tfTypes.Uar
			results1.Deadline = types.StringValue(resultsItem.Deadline.Format(time.RFC3339Nano))
			results1.Name = types.StringValue(resultsItem.Name)
			results1.ReviewerAssignmentPolicy = types.StringValue(string(resultsItem.ReviewerAssignmentPolicy))
			results1.SelfReviewAllowed = types.BoolValue(resultsItem.SelfReviewAllowed)
			results1.SendReviewerAssignmentNotification = types.BoolValue(resultsItem.SendReviewerAssignmentNotification)
			results1.TimeZone = types.StringValue(resultsItem.TimeZone)
			results1.UarID = types.StringValue(resultsItem.UarID)
			if resultsItem.UarScope == nil {
				results1.UarScope = nil
			} else {
				results1.UarScope = &tfTypes.UARScope{}
				results1.UarScope.Admins = []types.String{}
				for _, v := range resultsItem.UarScope.Admins {
					results1.UarScope.Admins = append(results1.UarScope.Admins, types.StringValue(v))
				}
				results1.UarScope.Apps = []types.String{}
				for _, v := range resultsItem.UarScope.Apps {
					results1.UarScope.Apps = append(results1.UarScope.Apps, types.StringValue(v))
				}
				results1.UarScope.Entities = []types.String{}
				for _, v := range resultsItem.UarScope.Entities {
					results1.UarScope.Entities = append(results1.UarScope.Entities, types.StringValue(v))
				}
				if resultsItem.UarScope.FilterOperator != nil {
					results1.UarScope.FilterOperator = types.StringValue(string(*resultsItem.UarScope.FilterOperator))
				} else {
					results1.UarScope.FilterOperator = types.StringNull()
				}
				results1.UarScope.GroupTypes = []types.String{}
				for _, v := range resultsItem.UarScope.GroupTypes {
					results1.UarScope.GroupTypes = append(results1.UarScope.GroupTypes, types.StringValue(string(v)))
				}
				if resultsItem.UarScope.GroupVisibility != nil {
					results1.UarScope.GroupVisibility = types.StringValue(string(*resultsItem.UarScope.GroupVisibility))
				} else {
					results1.UarScope.GroupVisibility = types.StringNull()
				}
				results1.UarScope.IncludeGroupBindings = types.BoolPointerValue(resultsItem.UarScope.IncludeGroupBindings)
				results1.UarScope.Names = []types.String{}
				for _, v := range resultsItem.UarScope.Names {
					results1.UarScope.Names = append(results1.UarScope.Names, types.StringValue(v))
				}
				results1.UarScope.ResourceTypes = []types.String{}
				for _, v := range resultsItem.UarScope.ResourceTypes {
					results1.UarScope.ResourceTypes = append(results1.UarScope.ResourceTypes, types.StringValue(string(v)))
				}
				results1.UarScope.Tags = []tfTypes.TagFilter{}
				for tagsCount, tagsItem := range resultsItem.UarScope.Tags {
					var tags1 tfTypes.TagFilter
					tags1.Key = types.StringValue(tagsItem.Key)
					tags1.Value = types.StringPointerValue(tagsItem.Value)
					if tagsCount+1 > len(results1.UarScope.Tags) {
						results1.UarScope.Tags = append(results1.UarScope.Tags, tags1)
					} else {
						results1.UarScope.Tags[tagsCount].Key = tags1.Key
						results1.UarScope.Tags[tagsCount].Value = tags1.Value
					}
				}
				results1.UarScope.Users = []types.String{}
				for _, v := range resultsItem.UarScope.Users {
					results1.UarScope.Users = append(results1.UarScope.Users, types.StringValue(v))
				}
			}
			if resultsCount+1 > len(r.Results) {
				r.Results = append(r.Results, results1)
			} else {
				r.Results[resultsCount].Deadline = results1.Deadline
				r.Results[resultsCount].Name = results1.Name
				r.Results[resultsCount].ReviewerAssignmentPolicy = results1.ReviewerAssignmentPolicy
				r.Results[resultsCount].SelfReviewAllowed = results1.SelfReviewAllowed
				r.Results[resultsCount].SendReviewerAssignmentNotification = results1.SendReviewerAssignmentNotification
				r.Results[resultsCount].TimeZone = results1.TimeZone
				r.Results[resultsCount].UarID = results1.UarID
				r.Results[resultsCount].UarScope = results1.UarScope
			}
		}
	}
}
