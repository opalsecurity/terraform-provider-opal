// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/opalsecurity/terraform-provider-opal/v3/internal/provider/typeconvert"
	tfTypes "github.com/opalsecurity/terraform-provider-opal/v3/internal/provider/types"
	"github.com/opalsecurity/terraform-provider-opal/v3/internal/sdk/models/operations"
	"github.com/opalsecurity/terraform-provider-opal/v3/internal/sdk/models/shared"
)

func (r *TagsListDataSourceModel) RefreshFromSharedPaginatedTagsList(ctx context.Context, resp *shared.PaginatedTagsList) diag.Diagnostics {
	var diags diag.Diagnostics

	if resp != nil {
		r.Next = types.StringPointerValue(resp.Next)
		r.Previous = types.StringPointerValue(resp.Previous)
		r.Results = []tfTypes.Tag{}

		for _, resultsItem := range resp.Results {
			var results tfTypes.Tag

			results.CreatedAt = types.StringPointerValue(typeconvert.TimePointerToStringPointer(resultsItem.CreatedAt))
			results.ID = types.StringValue(resultsItem.ID)
			results.Key = types.StringPointerValue(resultsItem.Key)
			results.UpdatedAt = types.StringPointerValue(typeconvert.TimePointerToStringPointer(resultsItem.UpdatedAt))
			results.UserCreatorID = types.StringPointerValue(resultsItem.UserCreatorID)
			results.Value = types.StringPointerValue(resultsItem.Value)

			r.Results = append(r.Results, results)
		}
	}

	return diags
}

func (r *TagsListDataSourceModel) ToOperationsGetTagsRequest(ctx context.Context) (*operations.GetTagsRequest, diag.Diagnostics) {
	var diags diag.Diagnostics

	cursor := new(string)
	if !r.Cursor.IsUnknown() && !r.Cursor.IsNull() {
		*cursor = r.Cursor.ValueString()
	} else {
		cursor = nil
	}
	pageSize := new(int64)
	if !r.PageSize.IsUnknown() && !r.PageSize.IsNull() {
		*pageSize = r.PageSize.ValueInt64()
	} else {
		pageSize = nil
	}
	out := operations.GetTagsRequest{
		Cursor:   cursor,
		PageSize: pageSize,
	}

	return &out, diags
}
