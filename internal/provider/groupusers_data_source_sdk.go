// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"github.com/hashicorp/terraform-plugin-framework/types"
	tfTypes "github.com/opalsecurity/terraform-provider-opal/internal/provider/types"
	"github.com/opalsecurity/terraform-provider-opal/internal/sdk/models/shared"
	"time"
)

func (r *GroupUsersDataSourceModel) RefreshFromSharedGroupUserList(resp *shared.GroupUserList) {
	if resp != nil {
		r.Results = []tfTypes.GroupUser{}
		if len(r.Results) > len(resp.Results) {
			r.Results = r.Results[:len(resp.Results)]
		}
		for resultsCount, resultsItem := range resp.Results {
			var results1 tfTypes.GroupUser
			if resultsItem.AccessLevel == nil {
				results1.AccessLevel = nil
			} else {
				results1.AccessLevel = &tfTypes.ResourceAccessLevel{}
				results1.AccessLevel.AccessLevelName = types.StringValue(resultsItem.AccessLevel.AccessLevelName)
				results1.AccessLevel.AccessLevelRemoteID = types.StringValue(resultsItem.AccessLevel.AccessLevelRemoteID)
			}
			results1.Email = types.StringValue(resultsItem.Email)
			if resultsItem.ExpirationDate != nil {
				results1.ExpirationDate = types.StringValue(resultsItem.ExpirationDate.Format(time.RFC3339Nano))
			} else {
				results1.ExpirationDate = types.StringNull()
			}
			results1.FullName = types.StringValue(resultsItem.FullName)
			results1.GroupID = types.StringValue(resultsItem.GroupID)
			results1.UserID = types.StringValue(resultsItem.UserID)
			if resultsCount+1 > len(r.Results) {
				r.Results = append(r.Results, results1)
			} else {
				r.Results[resultsCount].AccessLevel = results1.AccessLevel
				r.Results[resultsCount].Email = results1.Email
				r.Results[resultsCount].ExpirationDate = results1.ExpirationDate
				r.Results[resultsCount].FullName = results1.FullName
				r.Results[resultsCount].GroupID = results1.GroupID
				r.Results[resultsCount].UserID = results1.UserID
			}
		}
	}
}
