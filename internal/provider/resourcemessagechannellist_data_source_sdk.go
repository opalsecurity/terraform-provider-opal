// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
	tfTypes "github.com/opalsecurity/terraform-provider-opal/internal/provider/types"
	"github.com/opalsecurity/terraform-provider-opal/internal/sdk/models/shared"
)

func (r *ResourceMessageChannelListDataSourceModel) RefreshFromSharedMessageChannelList(ctx context.Context, resp *shared.MessageChannelList) diag.Diagnostics {
	var diags diag.Diagnostics

	if resp != nil {
		r.Channels = []tfTypes.MessageChannel{}
		if len(r.Channels) > len(resp.Channels) {
			r.Channels = r.Channels[:len(resp.Channels)]
		}
		for channelsCount, channelsItem := range resp.Channels {
			var channels tfTypes.MessageChannel
			channels.ID = types.StringValue(channelsItem.ID)
			channels.IsPrivate = types.BoolPointerValue(channelsItem.IsPrivate)
			channels.Name = types.StringPointerValue(channelsItem.Name)
			channels.RemoteID = types.StringPointerValue(channelsItem.RemoteID)
			if channelsItem.ThirdPartyProvider != nil {
				channels.ThirdPartyProvider = types.StringValue(string(*channelsItem.ThirdPartyProvider))
			} else {
				channels.ThirdPartyProvider = types.StringNull()
			}
			if channelsCount+1 > len(r.Channels) {
				r.Channels = append(r.Channels, channels)
			} else {
				r.Channels[channelsCount].ID = channels.ID
				r.Channels[channelsCount].IsPrivate = channels.IsPrivate
				r.Channels[channelsCount].Name = channels.Name
				r.Channels[channelsCount].RemoteID = channels.RemoteID
				r.Channels[channelsCount].ThirdPartyProvider = channels.ThirdPartyProvider
			}
		}
	}

	return diags
}
