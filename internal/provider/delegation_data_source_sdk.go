// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/opalsecurity/terraform-provider-opal/v3/internal/provider/typeconvert"
	"github.com/opalsecurity/terraform-provider-opal/v3/internal/sdk/models/operations"
	"github.com/opalsecurity/terraform-provider-opal/v3/internal/sdk/models/shared"
)

func (r *DelegationDataSourceModel) RefreshFromSharedDelegation(ctx context.Context, resp *shared.Delegation) diag.Diagnostics {
	var diags diag.Diagnostics

	if resp != nil {
		r.CreatedAt = types.StringValue(typeconvert.TimeToString(resp.CreatedAt))
		r.DelegateUserID = types.StringValue(resp.DelegateUserID)
		r.DelegatorUserID = types.StringValue(resp.DelegatorUserID)
		r.EndTime = types.StringValue(typeconvert.TimeToString(resp.EndTime))
		r.ID = types.StringValue(resp.ID)
		r.Reason = types.StringValue(resp.Reason)
		r.StartTime = types.StringValue(typeconvert.TimeToString(resp.StartTime))
		r.UpdatedAt = types.StringValue(typeconvert.TimeToString(resp.UpdatedAt))
	}

	return diags
}

func (r *DelegationDataSourceModel) ToOperationsGetDelegationRequest(ctx context.Context) (*operations.GetDelegationRequest, diag.Diagnostics) {
	var diags diag.Diagnostics

	var id string
	id = r.ID.ValueString()

	out := operations.GetDelegationRequest{
		ID: id,
	}

	return &out, diags
}
