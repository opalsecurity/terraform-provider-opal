// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
	tfTypes "github.com/opalsecurity/terraform-provider-opal/internal/provider/types"
	"github.com/opalsecurity/terraform-provider-opal/internal/sdk/models/shared"
)

func (r *IdpGroupMappingsDataSourceModel) RefreshFromSharedIdpGroupMappingList(ctx context.Context, resp *shared.IdpGroupMappingList) diag.Diagnostics {
	var diags diag.Diagnostics

	if resp != nil {
		r.Mappings = []tfTypes.IdpGroupMapping{}
		if len(r.Mappings) > len(resp.Mappings) {
			r.Mappings = r.Mappings[:len(resp.Mappings)]
		}
		for mappingsCount, mappingsItem := range resp.Mappings {
			var mappings tfTypes.IdpGroupMapping
			mappings.Alias = types.StringPointerValue(mappingsItem.Alias)
			mappings.GroupID = types.StringValue(mappingsItem.GroupID)
			mappings.HiddenFromEndUser = types.BoolValue(mappingsItem.HiddenFromEndUser)
			if mappingsCount+1 > len(r.Mappings) {
				r.Mappings = append(r.Mappings, mappings)
			} else {
				r.Mappings[mappingsCount].Alias = mappings.Alias
				r.Mappings[mappingsCount].GroupID = mappings.GroupID
				r.Mappings[mappingsCount].HiddenFromEndUser = mappings.HiddenFromEndUser
			}
		}
	}

	return diags
}
