// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"github.com/hashicorp/terraform-plugin-framework/types"
	tfTypes "github.com/opalsecurity/terraform-provider-opal/internal/provider/types"
	"github.com/opalsecurity/terraform-provider-opal/internal/sdk/models/operations"
	"github.com/opalsecurity/terraform-provider-opal/internal/sdk/models/shared"
	"time"
)

func (r *GroupUserResourceModel) ToOperationsCreateGroupUserRequestBody() *operations.CreateGroupUserRequestBody {
	accessLevelRemoteID := new(string)
	if !r.AccessLevelRemoteID.IsUnknown() && !r.AccessLevelRemoteID.IsNull() {
		*accessLevelRemoteID = r.AccessLevelRemoteID.ValueString()
	} else {
		accessLevelRemoteID = nil
	}
	durationMinutes := new(operations.DurationMinutes)
	if !r.DurationMinutes.IsUnknown() && !r.DurationMinutes.IsNull() {
		*durationMinutes = operations.DurationMinutes(r.DurationMinutes.ValueInt64())
	} else {
		durationMinutes = nil
	}
	out := operations.CreateGroupUserRequestBody{
		AccessLevelRemoteID: accessLevelRemoteID,
		DurationMinutes:     durationMinutes,
	}
	return &out
}

func (r *GroupUserResourceModel) RefreshFromSharedGroupUser(resp *shared.GroupUser) {
	if resp != nil {
		if resp.AccessLevel == nil {
			r.AccessLevel = nil
		} else {
			r.AccessLevel = &tfTypes.ResourceAccessLevel{}
			r.AccessLevel.AccessLevelName = types.StringValue(resp.AccessLevel.AccessLevelName)
			r.AccessLevel.AccessLevelRemoteID = types.StringValue(resp.AccessLevel.AccessLevelRemoteID)
		}
		r.Email = types.StringValue(resp.Email)
		if resp.ExpirationDate != nil {
			r.ExpirationDate = types.StringValue(resp.ExpirationDate.Format(time.RFC3339Nano))
		} else {
			r.ExpirationDate = types.StringNull()
		}
		r.FullName = types.StringValue(resp.FullName)
		r.GroupID = types.StringValue(resp.GroupID)
		r.UserID = types.StringValue(resp.UserID)
	}
}
