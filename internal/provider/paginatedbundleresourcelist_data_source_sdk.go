// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
	tfTypes "github.com/opalsecurity/terraform-provider-opal/internal/provider/types"
	"github.com/opalsecurity/terraform-provider-opal/internal/sdk/models/operations"
	"github.com/opalsecurity/terraform-provider-opal/internal/sdk/models/shared"
)

func (r *PaginatedBundleResourceListDataSourceModel) ToOperationsGetBundleResourcesRequest(ctx context.Context) (*operations.GetBundleResourcesRequest, diag.Diagnostics) {
	var diags diag.Diagnostics

	var bundleID string
	bundleID = r.BundleID.ValueString()

	cursor := new(string)
	if !r.Cursor.IsUnknown() && !r.Cursor.IsNull() {
		*cursor = r.Cursor.ValueString()
	} else {
		cursor = nil
	}
	pageSize := new(int64)
	if !r.PageSize.IsUnknown() && !r.PageSize.IsNull() {
		*pageSize = r.PageSize.ValueInt64()
	} else {
		pageSize = nil
	}
	out := operations.GetBundleResourcesRequest{
		BundleID: bundleID,
		Cursor:   cursor,
		PageSize: pageSize,
	}

	return &out, diags
}

func (r *PaginatedBundleResourceListDataSourceModel) RefreshFromSharedPaginatedBundleResourceList(ctx context.Context, resp *shared.PaginatedBundleResourceList) diag.Diagnostics {
	var diags diag.Diagnostics

	if resp != nil {
		r.BundleResources = []tfTypes.BundleResource{}
		if len(r.BundleResources) > len(resp.BundleResources) {
			r.BundleResources = r.BundleResources[:len(resp.BundleResources)]
		}
		for bundleResourcesCount, bundleResourcesItem := range resp.BundleResources {
			var bundleResources tfTypes.BundleResource
			bundleResources.AccessLevelName = types.StringPointerValue(bundleResourcesItem.AccessLevelName)
			bundleResources.AccessLevelRemoteID = types.StringPointerValue(bundleResourcesItem.AccessLevelRemoteID)
			bundleResources.BundleID = types.StringPointerValue(bundleResourcesItem.BundleID)
			bundleResources.ResourceID = types.StringPointerValue(bundleResourcesItem.ResourceID)
			if bundleResourcesCount+1 > len(r.BundleResources) {
				r.BundleResources = append(r.BundleResources, bundleResources)
			} else {
				r.BundleResources[bundleResourcesCount].AccessLevelName = bundleResources.AccessLevelName
				r.BundleResources[bundleResourcesCount].AccessLevelRemoteID = bundleResources.AccessLevelRemoteID
				r.BundleResources[bundleResourcesCount].BundleID = bundleResources.BundleID
				r.BundleResources[bundleResourcesCount].ResourceID = bundleResources.ResourceID
			}
		}
		r.Next = types.StringPointerValue(resp.Next)
		r.Previous = types.StringPointerValue(resp.Previous)
		r.TotalCount = types.Int64PointerValue(resp.TotalCount)
	}

	return diags
}
