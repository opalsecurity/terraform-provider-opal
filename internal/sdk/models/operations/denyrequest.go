// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/opalsecurity/terraform-provider-opal/v3/internal/sdk/models/shared"
	"net/http"
)

// DenyRequestRequestBody - Denial parameters
type DenyRequestRequestBody struct {
	// Comment for the denial
	Comment string `json:"comment"`
	// The decision level for the approval
	Level *shared.RequestApprovalEnum `json:"level,omitempty"`
}

func (d *DenyRequestRequestBody) GetComment() string {
	if d == nil {
		return ""
	}
	return d.Comment
}

func (d *DenyRequestRequestBody) GetLevel() *shared.RequestApprovalEnum {
	if d == nil {
		return nil
	}
	return d.Level
}

type DenyRequestRequest struct {
	// Denial parameters
	RequestBody DenyRequestRequestBody `request:"mediaType=application/json"`
	// The ID of the request to deny
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

func (d *DenyRequestRequest) GetRequestBody() DenyRequestRequestBody {
	if d == nil {
		return DenyRequestRequestBody{}
	}
	return d.RequestBody
}

func (d *DenyRequestRequest) GetID() string {
	if d == nil {
		return ""
	}
	return d.ID
}

// DenyRequestResponseBody - Request successfully denied
type DenyRequestResponseBody struct {
	// # Request Object
	// ### Description
	// The `Request` object is used to represent a request.
	//
	// ### Usage Example
	// Returned from the `GET Requests` endpoint.
	Request *shared.Request `json:"request,omitempty"`
}

func (d *DenyRequestResponseBody) GetRequest() *shared.Request {
	if d == nil {
		return nil
	}
	return d.Request
}

type DenyRequestResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Request successfully denied
	Object *DenyRequestResponseBody
}

func (d *DenyRequestResponse) GetContentType() string {
	if d == nil {
		return ""
	}
	return d.ContentType
}

func (d *DenyRequestResponse) GetStatusCode() int {
	if d == nil {
		return 0
	}
	return d.StatusCode
}

func (d *DenyRequestResponse) GetRawResponse() *http.Response {
	if d == nil {
		return nil
	}
	return d.RawResponse
}

func (d *DenyRequestResponse) GetObject() *DenyRequestResponseBody {
	if d == nil {
		return nil
	}
	return d.Object
}
