// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/opalsecurity/terraform-provider-opal/v3/internal/sdk/models/shared"
	"net/http"
)

type GetRemoteUsersRequest struct {
	// The pagination cursor value.
	Cursor *string `queryParam:"style=form,explode=true,name=cursor"`
	// Number of results to return per page. Default is 200.
	PageSize *int64 `queryParam:"style=form,explode=true,name=page_size"`
	// Filter remote users by their remote ID.
	RemoteID []string `queryParam:"style=form,explode=true,name=remote_id"`
	// Filter remote users by their third party provider.
	ThirdPartyProvider []shared.ThirdPartyProviderEnum `queryParam:"style=form,explode=true,name=third_party_provider"`
	// Filter remote users by their user ID.
	UserID []string `queryParam:"style=form,explode=true,name=user_id"`
}

func (g *GetRemoteUsersRequest) GetCursor() *string {
	if g == nil {
		return nil
	}
	return g.Cursor
}

func (g *GetRemoteUsersRequest) GetPageSize() *int64 {
	if g == nil {
		return nil
	}
	return g.PageSize
}

func (g *GetRemoteUsersRequest) GetRemoteID() []string {
	if g == nil {
		return nil
	}
	return g.RemoteID
}

func (g *GetRemoteUsersRequest) GetThirdPartyProvider() []shared.ThirdPartyProviderEnum {
	if g == nil {
		return nil
	}
	return g.ThirdPartyProvider
}

func (g *GetRemoteUsersRequest) GetUserID() []string {
	if g == nil {
		return nil
	}
	return g.UserID
}

type GetRemoteUsersResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// One page worth users in your organization.
	PaginatedRemoteUsersList *shared.PaginatedRemoteUsersList
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (g *GetRemoteUsersResponse) GetContentType() string {
	if g == nil {
		return ""
	}
	return g.ContentType
}

func (g *GetRemoteUsersResponse) GetPaginatedRemoteUsersList() *shared.PaginatedRemoteUsersList {
	if g == nil {
		return nil
	}
	return g.PaginatedRemoteUsersList
}

func (g *GetRemoteUsersResponse) GetStatusCode() int {
	if g == nil {
		return 0
	}
	return g.StatusCode
}

func (g *GetRemoteUsersResponse) GetRawResponse() *http.Response {
	if g == nil {
		return nil
	}
	return g.RawResponse
}
