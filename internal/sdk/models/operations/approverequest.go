// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/opalsecurity/terraform-provider-opal/v3/internal/sdk/models/shared"
	"net/http"
)

// ApproveRequestRequestBody - Approval parameters
type ApproveRequestRequestBody struct {
	// Optional comment for the approval
	Comment *string `json:"comment,omitempty"`
	// The decision level for the approval
	Level shared.RequestApprovalEnum `json:"level"`
}

func (a *ApproveRequestRequestBody) GetComment() *string {
	if a == nil {
		return nil
	}
	return a.Comment
}

func (a *ApproveRequestRequestBody) GetLevel() shared.RequestApprovalEnum {
	if a == nil {
		return shared.RequestApprovalEnum("")
	}
	return a.Level
}

type ApproveRequestRequest struct {
	// Approval parameters
	RequestBody ApproveRequestRequestBody `request:"mediaType=application/json"`
	// The ID of the request to approve
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

func (a *ApproveRequestRequest) GetRequestBody() ApproveRequestRequestBody {
	if a == nil {
		return ApproveRequestRequestBody{}
	}
	return a.RequestBody
}

func (a *ApproveRequestRequest) GetID() string {
	if a == nil {
		return ""
	}
	return a.ID
}

// ApproveRequestResponseBody - Request successfully approved
type ApproveRequestResponseBody struct {
	// # Request Object
	// ### Description
	// The `Request` object is used to represent a request.
	//
	// ### Usage Example
	// Returned from the `GET Requests` endpoint.
	Request *shared.Request `json:"request,omitempty"`
}

func (a *ApproveRequestResponseBody) GetRequest() *shared.Request {
	if a == nil {
		return nil
	}
	return a.Request
}

type ApproveRequestResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Request successfully approved
	Object *ApproveRequestResponseBody
}

func (a *ApproveRequestResponse) GetContentType() string {
	if a == nil {
		return ""
	}
	return a.ContentType
}

func (a *ApproveRequestResponse) GetStatusCode() int {
	if a == nil {
		return 0
	}
	return a.StatusCode
}

func (a *ApproveRequestResponse) GetRawResponse() *http.Response {
	if a == nil {
		return nil
	}
	return a.RawResponse
}

func (a *ApproveRequestResponse) GetObject() *ApproveRequestResponseBody {
	if a == nil {
		return nil
	}
	return a.Object
}
