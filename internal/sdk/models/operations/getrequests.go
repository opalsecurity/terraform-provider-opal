// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/opalsecurity/terraform-provider-opal/v3/internal/sdk/models/shared"
	"net/http"
)

type GetRequestsRequest struct {
	// The pagination cursor value.
	Cursor *string `queryParam:"style=form,explode=true,name=cursor"`
	// An end date filter for the events.
	EndDateFilter *string `queryParam:"style=form,explode=true,name=end_date_filter"`
	// Number of results to return per page. Default is 200.
	PageSize *int64 `queryParam:"style=form,explode=true,name=page_size"`
	// Filter requests by their requester ID.
	RequesterID *string `queryParam:"style=form,explode=true,name=requester_id"`
	// Boolean toggle for if it should only show pending requests.
	ShowPendingOnly *bool `queryParam:"style=form,explode=true,name=show_pending_only"`
	// A start date filter for the events.
	StartDateFilter *string `queryParam:"style=form,explode=true,name=start_date_filter"`
	// Filter requests by their target user ID.
	TargetUserID *string `queryParam:"style=form,explode=true,name=target_user_id"`
}

func (g *GetRequestsRequest) GetCursor() *string {
	if g == nil {
		return nil
	}
	return g.Cursor
}

func (g *GetRequestsRequest) GetEndDateFilter() *string {
	if g == nil {
		return nil
	}
	return g.EndDateFilter
}

func (g *GetRequestsRequest) GetPageSize() *int64 {
	if g == nil {
		return nil
	}
	return g.PageSize
}

func (g *GetRequestsRequest) GetRequesterID() *string {
	if g == nil {
		return nil
	}
	return g.RequesterID
}

func (g *GetRequestsRequest) GetShowPendingOnly() *bool {
	if g == nil {
		return nil
	}
	return g.ShowPendingOnly
}

func (g *GetRequestsRequest) GetStartDateFilter() *string {
	if g == nil {
		return nil
	}
	return g.StartDateFilter
}

func (g *GetRequestsRequest) GetTargetUserID() *string {
	if g == nil {
		return nil
	}
	return g.TargetUserID
}

type GetRequestsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// The list of requests.
	RequestList *shared.RequestList
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (g *GetRequestsResponse) GetContentType() string {
	if g == nil {
		return ""
	}
	return g.ContentType
}

func (g *GetRequestsResponse) GetRequestList() *shared.RequestList {
	if g == nil {
		return nil
	}
	return g.RequestList
}

func (g *GetRequestsResponse) GetStatusCode() int {
	if g == nil {
		return 0
	}
	return g.StatusCode
}

func (g *GetRequestsResponse) GetRawResponse() *http.Response {
	if g == nil {
		return nil
	}
	return g.RawResponse
}
