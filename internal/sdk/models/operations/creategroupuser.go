// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/opalsecurity/terraform-provider-opal/internal/sdk/internal/utils"
	"github.com/opalsecurity/terraform-provider-opal/internal/sdk/models/shared"
	"net/http"
)

// DurationMinutes - Must be set to 0. Any nonzerovalue in terraform does not make sense.
type DurationMinutes int64

const (
	DurationMinutesZero DurationMinutes = 0
)

func (e DurationMinutes) ToPointer() *DurationMinutes {
	return &e
}

func (e *DurationMinutes) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 0:
		*e = DurationMinutes(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DurationMinutes: %v", v)
	}
}

type CreateGroupUserRequestBody struct {
	// The remote ID of the access level to grant to this user. If omitted, the default access level remote ID value (empty string) is used.
	AccessLevelRemoteID *string `json:"access_level_remote_id,omitempty"`
	// Must be set to 0. Any nonzerovalue in terraform does not make sense.
	DurationMinutes *DurationMinutes `default:"0" json:"duration_minutes"`
}

func (c CreateGroupUserRequestBody) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CreateGroupUserRequestBody) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CreateGroupUserRequestBody) GetAccessLevelRemoteID() *string {
	if o == nil {
		return nil
	}
	return o.AccessLevelRemoteID
}

func (o *CreateGroupUserRequestBody) GetDurationMinutes() *DurationMinutes {
	if o == nil {
		return nil
	}
	return o.DurationMinutes
}

type CreateGroupUserRequest struct {
	RequestBody CreateGroupUserRequestBody `request:"mediaType=application/json"`
	// The ID of the group.
	GroupID string `pathParam:"style=simple,explode=false,name=group_id"`
	// The ID of the user to add.
	UserID string `pathParam:"style=simple,explode=false,name=user_id"`
}

func (o *CreateGroupUserRequest) GetRequestBody() CreateGroupUserRequestBody {
	if o == nil {
		return CreateGroupUserRequestBody{}
	}
	return o.RequestBody
}

func (o *CreateGroupUserRequest) GetGroupID() string {
	if o == nil {
		return ""
	}
	return o.GroupID
}

func (o *CreateGroupUserRequest) GetUserID() string {
	if o == nil {
		return ""
	}
	return o.UserID
}

type CreateGroupUserResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// The GroupUser that was created.
	GroupUser *shared.GroupUser
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *CreateGroupUserResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *CreateGroupUserResponse) GetGroupUser() *shared.GroupUser {
	if o == nil {
		return nil
	}
	return o.GroupUser
}

func (o *CreateGroupUserResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *CreateGroupUserResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
