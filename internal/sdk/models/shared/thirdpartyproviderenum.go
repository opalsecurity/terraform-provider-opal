// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ThirdPartyProviderEnum - The third party provider of the remote user.
type ThirdPartyProviderEnum string

const (
	ThirdPartyProviderEnumAuth0            ThirdPartyProviderEnum = "AUTH0"
	ThirdPartyProviderEnumSlack            ThirdPartyProviderEnum = "SLACK"
	ThirdPartyProviderEnumGoogleChat       ThirdPartyProviderEnum = "GOOGLE_CHAT"
	ThirdPartyProviderEnumJira             ThirdPartyProviderEnum = "JIRA"
	ThirdPartyProviderEnumLinear           ThirdPartyProviderEnum = "LINEAR"
	ThirdPartyProviderEnumServiceNow       ThirdPartyProviderEnum = "SERVICE_NOW"
	ThirdPartyProviderEnumPagerDuty        ThirdPartyProviderEnum = "PAGER_DUTY"
	ThirdPartyProviderEnumOpsgenie         ThirdPartyProviderEnum = "OPSGENIE"
	ThirdPartyProviderEnumGitHub           ThirdPartyProviderEnum = "GIT_HUB"
	ThirdPartyProviderEnumGitLab           ThirdPartyProviderEnum = "GIT_LAB"
	ThirdPartyProviderEnumGitLabConnection ThirdPartyProviderEnum = "GIT_LAB_CONNECTION"
	ThirdPartyProviderEnumTeleport         ThirdPartyProviderEnum = "TELEPORT"
)

func (e ThirdPartyProviderEnum) ToPointer() *ThirdPartyProviderEnum {
	return &e
}
func (e *ThirdPartyProviderEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AUTH0":
		fallthrough
	case "SLACK":
		fallthrough
	case "GOOGLE_CHAT":
		fallthrough
	case "JIRA":
		fallthrough
	case "LINEAR":
		fallthrough
	case "SERVICE_NOW":
		fallthrough
	case "PAGER_DUTY":
		fallthrough
	case "OPSGENIE":
		fallthrough
	case "GIT_HUB":
		fallthrough
	case "GIT_LAB":
		fallthrough
	case "GIT_LAB_CONNECTION":
		fallthrough
	case "TELEPORT":
		*e = ThirdPartyProviderEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ThirdPartyProviderEnum: %v", v)
	}
}
