// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/opalsecurity/terraform-provider-opal/v3/internal/sdk/internal/utils"
	"time"
)

// AppValidation - # App validation object
// ### Description
// The `AppValidation` object is used to represent a validation check of an apps' configuration and permissions.
//
// ### Usage Example
// List from the `GET Apps` endpoint.
type AppValidation struct {
	// Extra details regarding the validation. Could be an error message or restrictions on permissions.
	Details *string `json:"details,omitempty"`
	// The key of the app validation. These are not unique IDs between runs.
	Key string `json:"key"`
	// The human-readable description of whether the validation has the permissions.
	Name any `json:"name"`
	// The severity of an app validation.
	Severity AppValidationSeverityEnum `json:"severity"`
	// The status of an app validation.
	Status AppValidationStatusEnum `json:"status"`
	// The date and time the app validation was last run.
	UpdatedAt time.Time `json:"updated_at"`
	// The reason for needing the validation.
	UsageReason *string `json:"usage_reason,omitempty"`
}

func (a AppValidation) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AppValidation) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *AppValidation) GetDetails() *string {
	if o == nil {
		return nil
	}
	return o.Details
}

func (o *AppValidation) GetKey() string {
	if o == nil {
		return ""
	}
	return o.Key
}

func (o *AppValidation) GetName() any {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *AppValidation) GetSeverity() AppValidationSeverityEnum {
	if o == nil {
		return AppValidationSeverityEnum("")
	}
	return o.Severity
}

func (o *AppValidation) GetStatus() AppValidationStatusEnum {
	if o == nil {
		return AppValidationStatusEnum("")
	}
	return o.Status
}

func (o *AppValidation) GetUpdatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedAt
}

func (o *AppValidation) GetUsageReason() *string {
	if o == nil {
		return nil
	}
	return o.UsageReason
}
