// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

// # MessageChannel Object
// ### Description
// The `MessageChannel` object is used to represent a message channel.
//
// ### Usage Example
// Update a groups message channel from the `UPDATE Groups` endpoint.
type MessageChannel struct {
	// The ID of the message channel.
	ID string `json:"message_channel_id"`
	// A bool representing whether or not the message channel is private.
	IsPrivate *bool `json:"is_private,omitempty"`
	// The name of the message channel.
	Name *string `json:"name,omitempty"`
	// The remote ID of the message channel
	RemoteID *string `json:"remote_id,omitempty"`
	// The third party provider of the message channel.
	ThirdPartyProvider *MessageChannelProviderEnum `json:"third_party_provider,omitempty"`
}

func (m *MessageChannel) GetID() string {
	if m == nil {
		return ""
	}
	return m.ID
}

func (m *MessageChannel) GetIsPrivate() *bool {
	if m == nil {
		return nil
	}
	return m.IsPrivate
}

func (m *MessageChannel) GetName() *string {
	if m == nil {
		return nil
	}
	return m.Name
}

func (m *MessageChannel) GetRemoteID() *string {
	if m == nil {
		return nil
	}
	return m.RemoteID
}

func (m *MessageChannel) GetThirdPartyProvider() *MessageChannelProviderEnum {
	if m == nil {
		return nil
	}
	return m.ThirdPartyProvider
}
