// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/opalsecurity/terraform-provider-opal/v3/internal/sdk/internal/utils"
	"time"
)

// # Delegation Object
// ### Description
// The `Delegation` object represents a delegation of access review requests from one user to another.
//
// ### Usage Example
// List from the `GET Delegations` endpoint.
// Get from the `GET Delegation` endpoint.
type Delegation struct {
	// The creation time of the delegation.
	CreatedAt time.Time `json:"created_at"`
	// The ID of the user being delegated to.
	DelegateUserID string `json:"delegate_user_id"`
	// The ID of the user delegating their access review requests.
	DelegatorUserID string `json:"delegator_user_id"`
	// The end time of the delegation.
	EndTime time.Time `json:"end_time"`
	// The ID of the delegation.
	ID string `json:"id"`
	// The reason for the delegation.
	Reason string `json:"reason"`
	// The start time of the delegation.
	StartTime time.Time `json:"start_time"`
	// The last updated time of the delegation.
	UpdatedAt time.Time `json:"updated_at"`
}

func (d Delegation) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(d, "", false)
}

func (d *Delegation) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &d, "", false, []string{"created_at", "delegate_user_id", "delegator_user_id", "end_time", "id", "reason", "start_time", "updated_at"}); err != nil {
		return err
	}
	return nil
}

func (d *Delegation) GetCreatedAt() time.Time {
	if d == nil {
		return time.Time{}
	}
	return d.CreatedAt
}

func (d *Delegation) GetDelegateUserID() string {
	if d == nil {
		return ""
	}
	return d.DelegateUserID
}

func (d *Delegation) GetDelegatorUserID() string {
	if d == nil {
		return ""
	}
	return d.DelegatorUserID
}

func (d *Delegation) GetEndTime() time.Time {
	if d == nil {
		return time.Time{}
	}
	return d.EndTime
}

func (d *Delegation) GetID() string {
	if d == nil {
		return ""
	}
	return d.ID
}

func (d *Delegation) GetReason() string {
	if d == nil {
		return ""
	}
	return d.Reason
}

func (d *Delegation) GetStartTime() time.Time {
	if d == nil {
		return time.Time{}
	}
	return d.StartTime
}

func (d *Delegation) GetUpdatedAt() time.Time {
	if d == nil {
		return time.Time{}
	}
	return d.UpdatedAt
}
