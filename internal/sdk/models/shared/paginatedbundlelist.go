// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type PaginatedBundleList struct {
	Bundles []Bundle `json:"bundles"`
	// The cursor with which to continue pagination if additional result pages exist.
	Next *string `json:"next,omitempty"`
	// The cursor used to obtain the current result page.
	Previous *string `json:"previous,omitempty"`
	// The total number of items in the result set.
	TotalCount *int64 `json:"total_count,omitempty"`
}

func (o *PaginatedBundleList) GetBundles() []Bundle {
	if o == nil {
		return []Bundle{}
	}
	return o.Bundles
}

func (o *PaginatedBundleList) GetNext() *string {
	if o == nil {
		return nil
	}
	return o.Next
}

func (o *PaginatedBundleList) GetPrevious() *string {
	if o == nil {
		return nil
	}
	return o.Previous
}

func (o *PaginatedBundleList) GetTotalCount() *int64 {
	if o == nil {
		return nil
	}
	return o.TotalCount
}
