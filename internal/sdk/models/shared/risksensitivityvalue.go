// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type RiskSensitivityValue string

const (
	RiskSensitivityValueCritical RiskSensitivityValue = "CRITICAL"
	RiskSensitivityValueHigh     RiskSensitivityValue = "HIGH"
	RiskSensitivityValueMedium   RiskSensitivityValue = "MEDIUM"
	RiskSensitivityValueLow      RiskSensitivityValue = "LOW"
	RiskSensitivityValueNone     RiskSensitivityValue = "NONE"
)

func (e RiskSensitivityValue) ToPointer() *RiskSensitivityValue {
	return &e
}
func (e *RiskSensitivityValue) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CRITICAL":
		fallthrough
	case "HIGH":
		fallthrough
	case "MEDIUM":
		fallthrough
	case "LOW":
		fallthrough
	case "NONE":
		*e = RiskSensitivityValue(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RiskSensitivityValue: %v", v)
	}
}
