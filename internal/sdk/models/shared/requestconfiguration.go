// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/opalsecurity/terraform-provider-opal/v3/internal/sdk/internal/utils"
)

// RequestConfiguration - # Request Configuration Object
// ### Description
// The `RequestConfiguration` object is used to represent a request configuration.
//
// ### Usage Example
// Returned from the `GET Request Configurations` endpoint.
type RequestConfiguration struct {
	// A bool representing whether or not to allow requests for this resource.
	AllowRequests bool `json:"allow_requests"`
	// A bool representing whether or not to automatically approve requests for this resource.
	AutoApproval bool       `json:"auto_approval"`
	Condition    *Condition `json:"condition,omitempty"`
	// The duration for which access can be extended (in minutes). Set to 0 to disable extensions. When > 0, extensions are enabled for the specified duration.
	ExtensionsDurationInMinutes *int64 `json:"extensions_duration_in_minutes,omitempty"`
	// The maximum duration for which the resource can be requested (in minutes).
	MaxDuration *int64 `default:"null" json:"max_duration_minutes"`
	// The priority of the request configuration.
	Priority int64 `json:"priority"`
	// The recommended duration for which the resource should be requested (in minutes). -1 represents an indefinite duration.
	RecommendedDuration *int64 `json:"recommended_duration_minutes,omitempty"`
	// The ID of the associated request template.
	RequestTemplateID *string `json:"request_template_id,omitempty"`
	// A bool representing whether or not to require MFA for requesting access to this resource.
	RequireMfaToRequest bool `json:"require_mfa_to_request"`
	// A bool representing whether or not access requests to the resource require an access ticket.
	RequireSupportTicket bool `json:"require_support_ticket"`
	// The list of reviewer stages for the request configuration.
	ReviewerStages []ReviewerStage `json:"reviewer_stages,omitempty"`
}

func (r RequestConfiguration) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *RequestConfiguration) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, []string{"allow_requests", "auto_approval", "priority", "require_mfa_to_request", "require_support_ticket"}); err != nil {
		return err
	}
	return nil
}

func (r *RequestConfiguration) GetAllowRequests() bool {
	if r == nil {
		return false
	}
	return r.AllowRequests
}

func (r *RequestConfiguration) GetAutoApproval() bool {
	if r == nil {
		return false
	}
	return r.AutoApproval
}

func (r *RequestConfiguration) GetCondition() *Condition {
	if r == nil {
		return nil
	}
	return r.Condition
}

func (r *RequestConfiguration) GetExtensionsDurationInMinutes() *int64 {
	if r == nil {
		return nil
	}
	return r.ExtensionsDurationInMinutes
}

func (r *RequestConfiguration) GetMaxDuration() *int64 {
	if r == nil {
		return nil
	}
	return r.MaxDuration
}

func (r *RequestConfiguration) GetPriority() int64 {
	if r == nil {
		return 0
	}
	return r.Priority
}

func (r *RequestConfiguration) GetRecommendedDuration() *int64 {
	if r == nil {
		return nil
	}
	return r.RecommendedDuration
}

func (r *RequestConfiguration) GetRequestTemplateID() *string {
	if r == nil {
		return nil
	}
	return r.RequestTemplateID
}

func (r *RequestConfiguration) GetRequireMfaToRequest() bool {
	if r == nil {
		return false
	}
	return r.RequireMfaToRequest
}

func (r *RequestConfiguration) GetRequireSupportTicket() bool {
	if r == nil {
		return false
	}
	return r.RequireSupportTicket
}

func (r *RequestConfiguration) GetReviewerStages() []ReviewerStage {
	if r == nil {
		return nil
	}
	return r.ReviewerStages
}
