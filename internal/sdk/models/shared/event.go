// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/opalsecurity/terraform-provider-opal/v3/internal/sdk/internal/utils"
	"time"
)

// # Event Object
// ### Description
// The `Event` object is used to represent an event.
//
// ### Usage Example
// Fetch from the `LIST Events` endpoint.
type Event struct {
	// The email of the actor user.
	ActorEmail *string `json:"actor_email,omitempty"`
	// The IP address of the event actor.
	ActorIPAddress *string `json:"actor_ip_address,omitempty"`
	// The name of the actor user.
	ActorName any `json:"actor_name"`
	// The ID of the actor user.
	ActorUserID string `json:"actor_user_id"`
	// The name of the API token used to create the event.
	APITokenName *string `json:"api_token_name,omitempty"`
	// The preview of the API token used to create the event.
	APITokenPreview *string `json:"api_token_preview,omitempty"`
	// The day and time the event was created.
	CreatedAt time.Time `json:"created_at"`
	// The ID of the event.
	EventID string `json:"event_id"`
	// The event type.
	EventType string     `json:"event_type"`
	SubEvents []SubEvent `json:"sub_events,omitempty"`
}

func (e Event) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(e, "", false)
}

func (e *Event) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &e, "", false, []string{"actor_name", "actor_user_id", "created_at", "event_id", "event_type"}); err != nil {
		return err
	}
	return nil
}

func (e *Event) GetActorEmail() *string {
	if e == nil {
		return nil
	}
	return e.ActorEmail
}

func (e *Event) GetActorIPAddress() *string {
	if e == nil {
		return nil
	}
	return e.ActorIPAddress
}

func (e *Event) GetActorName() any {
	if e == nil {
		return nil
	}
	return e.ActorName
}

func (e *Event) GetActorUserID() string {
	if e == nil {
		return ""
	}
	return e.ActorUserID
}

func (e *Event) GetAPITokenName() *string {
	if e == nil {
		return nil
	}
	return e.APITokenName
}

func (e *Event) GetAPITokenPreview() *string {
	if e == nil {
		return nil
	}
	return e.APITokenPreview
}

func (e *Event) GetCreatedAt() time.Time {
	if e == nil {
		return time.Time{}
	}
	return e.CreatedAt
}

func (e *Event) GetEventID() string {
	if e == nil {
		return ""
	}
	return e.EventID
}

func (e *Event) GetEventType() string {
	if e == nil {
		return ""
	}
	return e.EventType
}

func (e *Event) GetSubEvents() []SubEvent {
	if e == nil {
		return nil
	}
	return e.SubEvents
}
