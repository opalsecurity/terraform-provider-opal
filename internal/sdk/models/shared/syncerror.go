// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/opalsecurity/terraform-provider-opal/v3/internal/sdk/internal/utils"
	"time"
)

// # SyncError Object
// ### Description
// The `SyncError` object is used to represent a sync error.
//
// ### Usage Example
// List from the `GET Sync Errors` endpoint.
type SyncError struct {
	// The ID of the app that the error occured for.
	AppID *string `json:"app_id,omitempty"`
	// The error message associated with the sync error.
	ErrorMessage string `json:"error_message"`
	// The time when this error was first seen.
	FirstSeen time.Time `json:"first_seen"`
	// The time when this error was most recently seen.
	LastSeen time.Time `json:"last_seen"`
}

func (s SyncError) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SyncError) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, []string{"error_message", "first_seen", "last_seen"}); err != nil {
		return err
	}
	return nil
}

func (s *SyncError) GetAppID() *string {
	if s == nil {
		return nil
	}
	return s.AppID
}

func (s *SyncError) GetErrorMessage() string {
	if s == nil {
		return ""
	}
	return s.ErrorMessage
}

func (s *SyncError) GetFirstSeen() time.Time {
	if s == nil {
		return time.Time{}
	}
	return s.FirstSeen
}

func (s *SyncError) GetLastSeen() time.Time {
	if s == nil {
		return time.Time{}
	}
	return s.LastSeen
}
