// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RolePermissionNameEnum - The name of the role permission.
type RolePermissionNameEnum string

const (
	RolePermissionNameEnumRead                      RolePermissionNameEnum = "READ"
	RolePermissionNameEnumReadAssignments           RolePermissionNameEnum = "READ_ASSIGNMENTS"
	RolePermissionNameEnumCreate                    RolePermissionNameEnum = "CREATE"
	RolePermissionNameEnumImport                    RolePermissionNameEnum = "IMPORT"
	RolePermissionNameEnumExport                    RolePermissionNameEnum = "EXPORT"
	RolePermissionNameEnumSync                      RolePermissionNameEnum = "SYNC"
	RolePermissionNameEnumDelete                    RolePermissionNameEnum = "DELETE"
	RolePermissionNameEnumReadSettings              RolePermissionNameEnum = "READ_SETTINGS"
	RolePermissionNameEnumEditTags                  RolePermissionNameEnum = "EDIT_TAGS"
	RolePermissionNameEnumEditSettings              RolePermissionNameEnum = "EDIT_SETTINGS"
	RolePermissionNameEnumEditSyncSettings          RolePermissionNameEnum = "EDIT_SYNC_SETTINGS"
	RolePermissionNameEnumEditAssignments           RolePermissionNameEnum = "EDIT_ASSIGNMENTS"
	RolePermissionNameEnumEditRequestConfigurations RolePermissionNameEnum = "EDIT_REQUEST_CONFIGURATIONS"
	RolePermissionNameEnumEditEventStream           RolePermissionNameEnum = "EDIT_EVENT_STREAM"
	RolePermissionNameEnumAssignUarReviewers        RolePermissionNameEnum = "ASSIGN_UAR_REVIEWERS"
	RolePermissionNameEnumSendReminders             RolePermissionNameEnum = "SEND_REMINDERS"
	RolePermissionNameEnumStop                      RolePermissionNameEnum = "STOP"
	RolePermissionNameEnumRequestOnBehalf           RolePermissionNameEnum = "REQUEST_ON_BEHALF"
)

func (e RolePermissionNameEnum) ToPointer() *RolePermissionNameEnum {
	return &e
}
func (e *RolePermissionNameEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "READ":
		fallthrough
	case "READ_ASSIGNMENTS":
		fallthrough
	case "CREATE":
		fallthrough
	case "IMPORT":
		fallthrough
	case "EXPORT":
		fallthrough
	case "SYNC":
		fallthrough
	case "DELETE":
		fallthrough
	case "READ_SETTINGS":
		fallthrough
	case "EDIT_TAGS":
		fallthrough
	case "EDIT_SETTINGS":
		fallthrough
	case "EDIT_SYNC_SETTINGS":
		fallthrough
	case "EDIT_ASSIGNMENTS":
		fallthrough
	case "EDIT_REQUEST_CONFIGURATIONS":
		fallthrough
	case "EDIT_EVENT_STREAM":
		fallthrough
	case "ASSIGN_UAR_REVIEWERS":
		fallthrough
	case "SEND_REMINDERS":
		fallthrough
	case "STOP":
		fallthrough
	case "REQUEST_ON_BEHALF":
		*e = RolePermissionNameEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RolePermissionNameEnum: %v", v)
	}
}
