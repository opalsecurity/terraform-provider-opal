// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

// ActiveDirectoryGroup - Remote info for Active Directory group.
type ActiveDirectoryGroup struct {
	// The id of the Google group.
	GroupID string `json:"group_id"`
}

func (o *ActiveDirectoryGroup) GetGroupID() string {
	if o == nil {
		return ""
	}
	return o.GroupID
}

// AzureAdMicrosoft365Group - Remote info for Microsoft Entra ID Microsoft 365 group.
type AzureAdMicrosoft365Group struct {
	// The id of the Microsoft Entra ID Microsoft 365 group.
	GroupID string `json:"group_id"`
}

func (o *AzureAdMicrosoft365Group) GetGroupID() string {
	if o == nil {
		return ""
	}
	return o.GroupID
}

// AzureAdSecurityGroup - Remote info for Microsoft Entra ID Security group.
type AzureAdSecurityGroup struct {
	// The id of the Microsoft Entra ID Security group.
	GroupID string `json:"group_id"`
}

func (o *AzureAdSecurityGroup) GetGroupID() string {
	if o == nil {
		return ""
	}
	return o.GroupID
}

// DuoGroup - Remote info for Duo Security group.
type DuoGroup struct {
	// The id of the Duo Security group.
	GroupID string `json:"group_id"`
}

func (o *DuoGroup) GetGroupID() string {
	if o == nil {
		return ""
	}
	return o.GroupID
}

// GithubTeam - Remote info for GitHub team.
type GithubTeam struct {
	// The slug of the GitHub team.
	TeamSlug string `json:"team_slug"`
}

func (o *GithubTeam) GetTeamSlug() string {
	if o == nil {
		return ""
	}
	return o.TeamSlug
}

// GitlabGroup - Remote info for Gitlab group.
type GitlabGroup struct {
	// The id of the Gitlab group.
	GroupID string `json:"group_id"`
}

func (o *GitlabGroup) GetGroupID() string {
	if o == nil {
		return ""
	}
	return o.GroupID
}

// GoogleGroup - Remote info for Google group.
type GoogleGroup struct {
	// The id of the Google group.
	GroupID string `json:"group_id"`
}

func (o *GoogleGroup) GetGroupID() string {
	if o == nil {
		return ""
	}
	return o.GroupID
}

// LdapGroup - Remote info for LDAP group.
type LdapGroup struct {
	// The id of the LDAP group.
	GroupID string `json:"group_id"`
}

func (o *LdapGroup) GetGroupID() string {
	if o == nil {
		return ""
	}
	return o.GroupID
}

// OktaGroup - Remote info for Okta Directory group.
type OktaGroup struct {
	// The id of the Okta Directory group.
	GroupID string `json:"group_id"`
}

func (o *OktaGroup) GetGroupID() string {
	if o == nil {
		return ""
	}
	return o.GroupID
}

// GroupRemoteInfo - Information that defines the remote group. This replaces the deprecated remote_id and metadata fields.
type GroupRemoteInfo struct {
	// Remote info for Active Directory group.
	ActiveDirectoryGroup *ActiveDirectoryGroup `json:"active_directory_group,omitempty"`
	// Remote info for Microsoft Entra ID Microsoft 365 group.
	AzureAdMicrosoft365Group *AzureAdMicrosoft365Group `json:"azure_ad_microsoft_365_group,omitempty"`
	// Remote info for Microsoft Entra ID Security group.
	AzureAdSecurityGroup *AzureAdSecurityGroup `json:"azure_ad_security_group,omitempty"`
	// Remote info for Duo Security group.
	DuoGroup *DuoGroup `json:"duo_group,omitempty"`
	// Remote info for GitHub team.
	GithubTeam *GithubTeam `json:"github_team,omitempty"`
	// Remote info for Gitlab group.
	GitlabGroup *GitlabGroup `json:"gitlab_group,omitempty"`
	// Remote info for Google group.
	GoogleGroup *GoogleGroup `json:"google_group,omitempty"`
	// Remote info for LDAP group.
	LdapGroup *LdapGroup `json:"ldap_group,omitempty"`
	// Remote info for Okta Directory group.
	OktaGroup *OktaGroup `json:"okta_group,omitempty"`
}

func (o *GroupRemoteInfo) GetActiveDirectoryGroup() *ActiveDirectoryGroup {
	if o == nil {
		return nil
	}
	return o.ActiveDirectoryGroup
}

func (o *GroupRemoteInfo) GetAzureAdMicrosoft365Group() *AzureAdMicrosoft365Group {
	if o == nil {
		return nil
	}
	return o.AzureAdMicrosoft365Group
}

func (o *GroupRemoteInfo) GetAzureAdSecurityGroup() *AzureAdSecurityGroup {
	if o == nil {
		return nil
	}
	return o.AzureAdSecurityGroup
}

func (o *GroupRemoteInfo) GetDuoGroup() *DuoGroup {
	if o == nil {
		return nil
	}
	return o.DuoGroup
}

func (o *GroupRemoteInfo) GetGithubTeam() *GithubTeam {
	if o == nil {
		return nil
	}
	return o.GithubTeam
}

func (o *GroupRemoteInfo) GetGitlabGroup() *GitlabGroup {
	if o == nil {
		return nil
	}
	return o.GitlabGroup
}

func (o *GroupRemoteInfo) GetGoogleGroup() *GoogleGroup {
	if o == nil {
		return nil
	}
	return o.GoogleGroup
}

func (o *GroupRemoteInfo) GetLdapGroup() *LdapGroup {
	if o == nil {
		return nil
	}
	return o.LdapGroup
}

func (o *GroupRemoteInfo) GetOktaGroup() *OktaGroup {
	if o == nil {
		return nil
	}
	return o.OktaGroup
}
