// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ResourceUserAccessStatusEnum - The status of the user's access to the resource.
type ResourceUserAccessStatusEnum string

const (
	ResourceUserAccessStatusEnumAuthorized   ResourceUserAccessStatusEnum = "AUTHORIZED"
	ResourceUserAccessStatusEnumRequested    ResourceUserAccessStatusEnum = "REQUESTED"
	ResourceUserAccessStatusEnumUnauthorized ResourceUserAccessStatusEnum = "UNAUTHORIZED"
)

func (e ResourceUserAccessStatusEnum) ToPointer() *ResourceUserAccessStatusEnum {
	return &e
}
func (e *ResourceUserAccessStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AUTHORIZED":
		fallthrough
	case "REQUESTED":
		fallthrough
	case "UNAUTHORIZED":
		*e = ResourceUserAccessStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ResourceUserAccessStatusEnum: %v", v)
	}
}
