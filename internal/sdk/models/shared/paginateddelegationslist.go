// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

// PaginatedDelegationsList - A list of delegations for your organization.
type PaginatedDelegationsList struct {
	// The cursor with which to continue pagination if additional result pages exist.
	Next *string `json:"next,omitempty"`
	// The cursor used to obtain the current result page.
	Previous *string `json:"previous,omitempty"`
	// The delegations in the result set.
	Results []Delegation `json:"results,omitempty"`
	// The total number of items in the result set.
	TotalCount *int64 `json:"total_count,omitempty"`
}

func (o *PaginatedDelegationsList) GetNext() *string {
	if o == nil {
		return nil
	}
	return o.Next
}

func (o *PaginatedDelegationsList) GetPrevious() *string {
	if o == nil {
		return nil
	}
	return o.Previous
}

func (o *PaginatedDelegationsList) GetResults() []Delegation {
	if o == nil {
		return nil
	}
	return o.Results
}

func (o *PaginatedDelegationsList) GetTotalCount() *int64 {
	if o == nil {
		return nil
	}
	return o.TotalCount
}
