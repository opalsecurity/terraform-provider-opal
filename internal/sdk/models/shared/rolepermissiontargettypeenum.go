// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RolePermissionTargetTypeEnum - The type of the target for the role permission.
type RolePermissionTargetTypeEnum string

const (
	RolePermissionTargetTypeEnumResource     RolePermissionTargetTypeEnum = "RESOURCE"
	RolePermissionTargetTypeEnumConnection   RolePermissionTargetTypeEnum = "CONNECTION"
	RolePermissionTargetTypeEnumGroup        RolePermissionTargetTypeEnum = "GROUP"
	RolePermissionTargetTypeEnumBundle       RolePermissionTargetTypeEnum = "BUNDLE"
	RolePermissionTargetTypeEnumUser         RolePermissionTargetTypeEnum = "USER"
	RolePermissionTargetTypeEnumAccessReview RolePermissionTargetTypeEnum = "ACCESS_REVIEW"
)

func (e RolePermissionTargetTypeEnum) ToPointer() *RolePermissionTargetTypeEnum {
	return &e
}
func (e *RolePermissionTargetTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "RESOURCE":
		fallthrough
	case "CONNECTION":
		fallthrough
	case "GROUP":
		fallthrough
	case "BUNDLE":
		fallthrough
	case "USER":
		fallthrough
	case "ACCESS_REVIEW":
		*e = RolePermissionTargetTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RolePermissionTargetTypeEnum: %v", v)
	}
}
